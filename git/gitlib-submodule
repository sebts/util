#!/bin/bash
source gitlib

t=			#superproject tree directory
u=			#superproject git url
r="origin"	#superproject remote
b=			#superproject branch

usage()
{
cat << EOF

usage: $0 $*
This script will update a submodule within a repository

OPTIONS:
  Initialization mode: pass in params for the super-repository
  git-submodule.sh -i -t <path> -b <branch> [-u <giturl>] [-r <remote> ] 
  
  Submodule mode: pass in params for the submodule
  git-submodule.sh -t <path> -p <relpath> -b <branch> [-u <giturl>] [-r <remote> ]
  
  -t Sets the work tree.
  -b Sets the branch name.
  -u Optional. Sets the repository url.
  -r Optional. Sets the remote name. Default: origin.
EOF
}

# begin arguments
while getopts "t:u:r:b:?" OPTION
do
	case $OPTION in
		t) t=$OPTARG ;;
		u) u=$OPTARG ;;
		r) r=$OPTARG ;;
		b) b=$OPTARG ;;
		?) usage ; exit ;;
	 esac
done

if [[ -z $t ]] || [[ -z $b ]] || [[ -z $r ]]
then
	usage ; exit 1;
fi
# end arguments

calldir="$PWD"

init-repository "$t" "$r $u"
clean-checkout $r $b
update-submodules

cd "$calldir"